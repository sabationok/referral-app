{"version":3,"file":"static/js/319.fef8cf2d.chunk.js","mappings":"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","sources":["webpack://referral-app/./src/components/AppPages/SignUpPage/SignUpPage.module.scss?7248","components/AppPages/SignUpPage/SignUpPage.jsx","webpack://referral-app/./src/components/ButtonLink/ButtonLink.module.scss?09c4","components/ButtonLink/ButtonLink.jsx","webpack://referral-app/./src/components/ButtonText/ButtonText.module.scss?da3e","components/ButtonText/ButtonText.jsx","webpack://referral-app/./src/components/InputCustom/InputCustom.module.scss?9338","components/InputCustom/InputCustom.jsx","webpack://referral-app/./src/components/SignUpBlock/SignUpBlock.module.scss?0a6f","components/SignUpBlock/SignUpBlock.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SignUpPage\":\"SignUpPage_SignUpPage__P2VgV\"};","import React from 'react';\nimport AppLoader from 'components/AppLoader/AppLoader';\nimport SignUpBlock from 'components/SignUpBlock/SignUpBlock';\n\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from 'redux/selectors';\n\nimport s from './SignUpPage.module.scss';\nconst SignUpPage = () => {\n  const { isLoading } = useSelector(selectUserData);\n\n  return (\n    <>\n      <div className={s.SignUpPage}>\n        <SignUpBlock />\n      </div>\n      <AppLoader isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default SignUpPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ButtonLink_Button__FBNSi\",\"disabled\":\"ButtonLink_disabled__gA9-c\",\"ColoredBtn\":\"ButtonLink_ColoredBtn__XA1rh\",\"PrimaryBtn\":\"ButtonLink_PrimaryBtn__6KZRE\",\"BorderBtn\":\"ButtonLink_BorderBtn__xArm8\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport s from './ButtonLink.module.scss';\nconst ButtonLink = ({\n  children,\n  to = '/',\n  style = {},\n  className = '',\n  onClick,\n  styleType = 'PrimaryBtn',\n}) => {\n  const classNames = [s.Button, s[styleType], className].join(' ');\n  return (\n    <Link to={to} onClick={onClick} style={style} className={classNames}>\n      <span>{children}</span>\n    </Link>\n  );\n};\n\nexport default ButtonLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ButtonText_Button__jyVlZ\",\"disabled\":\"ButtonText_disabled__uCPQr\",\"ColoredBtn\":\"ButtonText_ColoredBtn__X+88K\",\"PrimaryBtn\":\"ButtonText_PrimaryBtn__KnE6B\",\"BorderBtn\":\"ButtonText_BorderBtn__yLIBf\"};","import React from 'react';\n\nimport s from './ButtonText.module.scss';\n\nconst ButtonText = ({\n  children,\n  type = 'button',\n  disabled = false,\n  style = {},\n  className = '',\n  onClick = null,\n  styleType = 'PrimaryBtn',\n}) => {\n  const classNames = [s.Button, s[styleType], className].join(' ');\n  function handleBtnClick() {\n    if (onClick) {\n      onClick();\n      return;\n    }\n    return;\n  }\n  return (\n    <button\n      style={style}\n      type={type}\n      className={classNames}\n      disabled={disabled}\n      onClick={handleBtnClick}\n    >\n      <span>{children}</span>\n    </button>\n  );\n};\n\nexport default ButtonText;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputBox\":\"InputCustom_inputBox__AJxyA\",\"visibilityBtn\":\"InputCustom_visibilityBtn__mqaQU\"};","import React, { useEffect, useState } from 'react';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\n\nimport s from './InputCustom.module.scss';\nconst InputCustom = ({\n  labelClass = '',\n  spanClass = '',\n  inputClass = '',\n  name = '',\n  id = '',\n  inputValue,\n  labelValue = '',\n  placeholder = '',\n  type = 'text',\n  required = true,\n  onChange,\n  ...others\n}) => {\n  const [isVisible, setIsVisible] = useState();\n  const [inputType, setInputType] = useState(type);\n  const iconId = isVisible ? 'icon-visibilityOn' : 'icon-visibilityOff';\n  const visibilityBtn = type === 'password';\n  function handleToggleVisibility() {\n    setIsVisible(!isVisible);\n  }\n  useEffect(() => {\n    if (type !== 'password') {\n      return;\n    }\n    if (type === 'password' && isVisible) {\n      setInputType('text');\n      return;\n    }\n    setInputType(type);\n  }, [isVisible, type]);\n  return (\n    <label className={labelClass} htmlFor={id}>\n      <span className={spanClass}>{labelValue}</span>\n      <span className={s.inputBox}>\n        <input\n          className={inputClass}\n          name={name}\n          type={inputType}\n          id={id}\n          value={inputValue && inputValue}\n          placeholder={placeholder}\n          required={required}\n          onChange={onChange}\n          {...others}\n        />\n        {visibilityBtn && (\n          <batton\n            type=\"button\"\n            className={s.visibilityBtn}\n            onClick={handleToggleVisibility}\n          >\n            <SvgIcon iconId={iconId} />\n          </batton>\n        )}\n      </span>\n    </label>\n  );\n};\n\nexport default InputCustom;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUpBlock_form__6cJ45\",\"label\":\"SignUpBlock_label__OleYp\",\"span\":\"SignUpBlock_span__Ktnuk\",\"inputs\":\"SignUpBlock_inputs__AZ9gS\",\"input\":\"SignUpBlock_input__gXnot\",\"agreament\":\"SignUpBlock_agreament__NJF7Z\",\"link\":\"SignUpBlock_link__HJ+Fw\"};","import React, { useState } from 'react';\nimport Block from 'components/Block/Block';\nimport ButtonText from 'components/ButtonText/ButtonText';\nimport PrivacyPolicyBlock from 'components/PrivacyPolicyBlock/PrivacyPolicyBlock';\nimport RullesBlock from 'components/RullesBlock/RullesBlock';\nimport ModalOpenLink from 'components/ModalCustom/ModalOpenLink/ModalOpenLink';\nimport ButtonLink from 'components/ButtonLink/ButtonLink';\nimport InputCustom from 'components/InputCustom/InputCustom';\n\nimport { useDispatch } from 'react-redux';\nimport { userRegisterThunk } from 'redux/auth/authThunks';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport sprite from 'img/sprite';\nimport s from './SignUpBlock.module.scss';\nconst SignUpBlock = ({ signInBtn, agreament }) => {\n  const dispatch = useDispatch();\n  const { referrerId } = useParams();\n  const initialFormData = {\n    name: '',\n    phone: '',\n    email: '',\n    password: '',\n    repeatPassword: '',\n    parentId: referrerId || '',\n  };\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChangeInput(ev) {\n    let { name, value } = ev.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(ev) {\n    ev.preventDefault();\n    if (formData.repeatPassword !== formData.password) {\n      toast.error('Паролі не співпадають');\n      return;\n    }\n    const newUser = {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email,\n      password: formData.password,\n      parentId: Number(referrerId) || Number(formData.parentId),\n    };\n    dispatch(userRegisterThunk(newUser));\n    setFormData(initialFormData);\n  }\n\n  return (\n    <>\n      <Block\n        title=\"Реєстрація\"\n        subTitle={\n          referrerId\n            ? `Реєстрація нового користувача (Запрошення від користувача ID:${referrerId})`\n            : `Реєстрація нового користувача`\n        }\n        sprite={sprite}\n        iconStartId=\"icon-signUp\"\n      >\n        <form className={s.form} onSubmit={handleFormSubmit}>\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"І'мя\"\n            inputValue={formData.name}\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n            placeholder=\"І'мя\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Телефон\"\n            inputValue={formData.phone}\n            name=\"phone\"\n            id=\"phone\"\n            type=\"text\"\n            placeholder=\"+380\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Електронна адреса\"\n            inputValue={formData.email}\n            name=\"email\"\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"example@mail.com\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Пароль\"\n            inputValue={formData.password}\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Повторіть пароль\"\n            InputValue={formData.repeatPassword}\n            name=\"repeatPassword\"\n            id=\"repeatPassword\"\n            type=\"password\"\n            placeholder=\"Repeat password\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Хто запросив? (ID)\"\n            InputValue={formData.parentId}\n            name=\"parentId\"\n            id=\"parentId\"\n            type=\"text\"\n            placeholder=\"ID: \"\n            disabled={referrerId}\n            required\n            onChange={handleChangeInput}\n          />\n          {agreament && (\n            <p className={s.agreament}>\n              <span>\n                Настискаючи кнопку реєстрації, Ви погоджуєтесь із нашою <br />\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<PrivacyPolicyBlock />}\n                >\n                  Політикою конфіденційності\n                </ModalOpenLink>{' '}\n                та{' '}\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<RullesBlock />}\n                >\n                  Правилами сервісу\n                </ModalOpenLink>\n              </span>\n            </p>\n          )}\n          <ButtonText type=\"submit\" styleType=\"ColoredBtn\">\n            Реєстрація\n          </ButtonText>\n          {signInBtn && <ButtonLink to=\"/signIn\">Вхід</ButtonLink>}\n        </form>\n      </Block>\n    </>\n  );\n};\n\nexport default SignUpBlock;\n"],"names":["isLoading","useSelector","selectUserData","className","s","SignUpBlock","AppLoader","children","to","style","onClick","styleType","classNames","join","type","disabled","labelClass","spanClass","inputClass","name","id","inputValue","labelValue","placeholder","required","onChange","others","useState","isVisible","setIsVisible","inputType","setInputType","iconId","visibilityBtn","useEffect","htmlFor","value","SvgIcon","signInBtn","agreament","dispatch","useDispatch","referrerId","useParams","initialFormData","phone","email","password","repeatPassword","parentId","formData","setFormData","handleChangeInput","ev","target","Block","title","subTitle","sprite","iconStartId","onSubmit","preventDefault","newUser","Number","userRegisterThunk","toast","InputCustom","InputValue","ModalOpenLink","modalContent","PrivacyPolicyBlock","RullesBlock","ButtonText","ButtonLink"],"sourceRoot":""}