{"version":3,"file":"static/js/721.6e0b6eae.chunk.js","mappings":"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","sources":["webpack://referral-app/./src/components/ButtonText/ButtonText.module.scss?da3e","components/ButtonText/ButtonText.jsx","webpack://referral-app/./src/components/Pages/SignUpPage/SignUpPage.module.scss?4ec1","components/Pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ButtonText_Button__jyVlZ\"};","import React from 'react';\n\nimport s from './ButtonText.module.scss';\n\nconst ButtonText = ({ children, type = 'button' }) => {\n  return (\n    <button type={type} className={s.Button}>\n      {children}\n    </button>\n  );\n};\n\nexport default ButtonText;\n","// extracted by mini-css-extract-plugin\nexport default {\"SignUpPage\":\"SignUpPage_SignUpPage__i8+Du\",\"form\":\"SignUpPage_form__6OhuX\",\"label\":\"SignUpPage_label__yEQxn\",\"inputs\":\"SignUpPage_inputs__aVDYy\",\"input\":\"SignUpPage_input__HRR9U\"};","import React, { useState } from 'react';\nimport Block from 'components/Block/Block';\nimport ButtonText from 'components/ButtonText/ButtonText';\nimport AppLoader from 'components/AppLoader/AppLoader';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userRegisterThunk } from 'redux/auth/authThunks';\nimport { selectUserData } from 'redux/selectors';\nimport { useParams } from 'react-router-dom';\n\nimport sprite from 'img/sprite';\nimport s from './SignUpPage.module.scss';\nconst SignUpPage = () => {\n  const { isLoading } = useSelector(selectUserData);\n  const dispatch = useDispatch();\n  const { referrerId } = useParams();\n\n  const initialFormData = {\n    name: '',\n    phone: '',\n    email: '',\n    password: '',\n    secondPassword: '',\n    parentId: referrerId,\n  };\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChangeInput(ev) {\n    let { name, value } = ev.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(ev) {\n    ev.preventDefault();\n    if (formData.secondPassword !== formData.password) {\n      Notiflix.Notify.failure('Паролі не збігаються');\n      return;\n    }\n    const newUser = {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email,\n      password: formData.password,\n      parentId: Number(formData.parentId),\n    };\n    dispatch(userRegisterThunk(newUser));\n    setFormData(initialFormData);\n  }\n\n  return (\n    <>\n      <div className={s.SignUpPage}>\n        <Block\n          title=\"Реєстрація\"\n          subTitle={\n            referrerId\n              ? `Реєстрація нового користувача (Запрошення від користувача ID:${referrerId})`\n              : `Реєстрація нового користувача`\n          }\n          sprite={sprite}\n          iconStartId=\"icon-signUp\"\n        >\n          <form className={s.form} onSubmit={handleFormSubmit}>\n            <label className={s.label} htmlFor=\"name\">\n              <span className={s.span}>І'мя</span>\n              <input\n                className={s.input}\n                name=\"name\"\n                type=\"text\"\n                id=\"name\"\n                value={formData.name}\n                placeholder={'name'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"phone\">\n              <span className={s.span}>Телефон</span>\n              <input\n                className={s.input}\n                name=\"phone\"\n                type=\"text\"\n                id=\"phone\"\n                value={formData.phone}\n                placeholder={'+380'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"email\">\n              <span className={s.span}>Електронна адреса</span>\n              <input\n                className={s.input}\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formData.email}\n                placeholder={'example@mail.com'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"password\">\n              <span className={s.span}>Пароль</span>\n              <input\n                className={s.input}\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formData.password}\n                placeholder={'password'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"secondPassword\">\n              <span className={s.span}>Повторіть пароль</span>\n              <input\n                className={s.input}\n                name=\"secondPassword\"\n                type=\"password\"\n                id=\"secondPassword\"\n                value={formData.secondPassword}\n                placeholder={'secondPassword'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"parentId\">\n              <span className={s.span}>{'Хто запросив (ID)'}</span>\n              <input\n                className={s.input}\n                name=\"parentId\"\n                type=\"text\"\n                id=\"parentId\"\n                value={formData.parentId}\n                placeholder={'parentId'}\n                disabled={referrerId}\n                onChange={handleChangeInput}\n              />\n            </label>\n            <ButtonText type=\"submit\">SignUp</ButtonText>\n          </form>\n        </Block>\n      </div>\n      <AppLoader isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["children","type","className","s","isLoading","useSelector","selectUserData","dispatch","useDispatch","referrerId","useParams","initialFormData","name","phone","email","password","secondPassword","parentId","useState","formData","setFormData","handleChangeInput","ev","target","value","Block","title","subTitle","sprite","iconStartId","onSubmit","preventDefault","newUser","Number","userRegisterThunk","Notiflix","htmlFor","id","placeholder","required","onChange","disabled","ButtonText","AppLoader"],"sourceRoot":""}