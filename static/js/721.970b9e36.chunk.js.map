{"version":3,"file":"static/js/721.970b9e36.chunk.js","mappings":"6NACA,GAAgB,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,OAAS,4B,SCuH7J,EAlHmB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,EAAkB,CACtBC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,SAAU,IAEZ,GAAgCC,EAAAA,EAAAA,UAASN,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAkBC,GACzB,MAAsBA,EAAGC,OAAnBV,EAAN,EAAMA,KAAMW,EAAZ,EAAYA,MACZJ,GAAY,kBAAKD,GAAN,cAAiBN,EAAOW,IACpC,CAuBD,OACE,gBAAKC,UAAWC,EAAAA,KAAhB,UACE,kBAAMD,UAAWC,EAAAA,KAAQC,SAxB7B,SAA0BL,GACxBA,EAAGM,iBACH,IAAMC,EAAU,CACdhB,KAAMM,EAASN,KACfC,MAAOK,EAASL,MAChBC,MAAOI,EAASJ,MAChBC,SAAUG,EAASH,SACnBC,SAAUa,OAAOX,EAASF,WAW5BP,GAASqB,EAAAA,EAAAA,IAAkBF,IAC3BT,EAAYR,EACb,EAIG,WACE,qCACA,mBAAOa,UAAWC,EAAAA,MAASM,QAAQ,OAAnC,WACE,iBAAMP,UAAWC,EAAAA,KAAjB,mBACA,kBACED,UAAWC,EAAAA,MACXb,KAAK,OACLoB,KAAK,OACLC,GAAG,OACHV,MAAOL,EAASN,KAChBsB,YAAa,OACbC,UAAQ,EACRC,SAAUhB,QAGd,mBAAOI,UAAWC,EAAAA,MAASM,QAAQ,QAAnC,WACE,iBAAMP,UAAWC,EAAAA,KAAjB,oBACA,kBACED,UAAWC,EAAAA,MACXb,KAAK,QACLoB,KAAK,OACLC,GAAG,QACHI,aAAY,cAASnB,EAASL,OAE9BqB,YAAa,QACbC,UAAQ,EACRC,SAAUhB,QAGd,mBAAOI,UAAWC,EAAAA,MAASM,QAAQ,QAAnC,WACE,iBAAMP,UAAWC,EAAAA,KAAjB,oBACA,kBACED,UAAWC,EAAAA,MACXb,KAAK,QACLoB,KAAK,QACLC,GAAG,QACHV,MAAOL,EAASJ,MAChBoB,YAAa,QACbC,UAAQ,EACRC,SAAUhB,QAGd,mBAAOI,UAAWC,EAAAA,MAASM,QAAQ,WAAnC,WACE,iBAAMP,UAAWC,EAAAA,KAAjB,uBACA,kBACED,UAAWC,EAAAA,MACXb,KAAK,WACLoB,KAAK,OACLC,GAAG,WACHV,MAAOL,EAASH,SAChBmB,YAAa,WACbC,UAAQ,EACRC,SAAUhB,QAGd,mBAAOI,UAAWC,EAAAA,MAASM,QAAQ,WAAnC,WACE,iBAAMP,UAAWC,EAAAA,KAAjB,sBACA,kBACED,UAAWC,EAAAA,MACXb,KAAK,WACLoB,KAAK,OACLC,GAAG,WACHV,MAAOL,EAASF,SAChBkB,YAAa,WACbE,SAAUhB,QAGd,mBAAQI,UAAWC,EAAAA,OAAUO,KAAK,SAAlC,wBAMP,C","sources":["webpack://referral-app/./src/components/Pages/SignUpPage/SignUpPage.module.scss?4ec1","components/Pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"SignUpPage_page__-AQtI\",\"form\":\"SignUpPage_form__6OhuX\",\"label\":\"SignUpPage_label__yEQxn\",\"input\":\"SignUpPage_input__HRR9U\",\"button\":\"SignUpPage_button__e8j72\"};","import React, { useState } from 'react';\n// import { nanoid, customAlphabet } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { userRegisterThunk } from 'redux/auth/authThunks';\nimport s from './SignUpPage.module.scss';\n// const randomPhone = customAlphabet('0123456789', 9);\nconst SignUpPage = () => {\n  const dispatch = useDispatch();\n  const initialFormData = {\n    name: '',\n    phone: '',\n    email: '',\n    password: '',\n    parentId: '',\n  };\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChangeInput(ev) {\n    let { name, value } = ev.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(ev) {\n    ev.preventDefault();\n    const newUser = {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email,\n      password: formData.password,\n      parentId: Number(formData.parentId),\n    };\n    // const testUser = {\n    //   name: nanoid(8),\n    //   phone: `+380${randomPhone()}`,\n    //   email: `${nanoid(10)}@mail.com`,\n    //   password: nanoid(10),\n    //   parentId: 71,\n    // };\n\n    // console.log(newUser);\n    dispatch(userRegisterThunk(newUser));\n    setFormData(initialFormData);\n  }\n\n  return (\n    <div className={s.page}>\n      <form className={s.form} onSubmit={handleFormSubmit}>\n        <p>Register</p>\n        <label className={s.label} htmlFor=\"name\">\n          <span className={s.span}>Name</span>\n          <input\n            className={s.input}\n            name=\"name\"\n            type=\"text\"\n            id=\"name\"\n            value={formData.name}\n            placeholder={'name'}\n            required\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={s.label} htmlFor=\"phone\">\n          <span className={s.span}>Phone</span>\n          <input\n            className={s.input}\n            name=\"phone\"\n            type=\"text\"\n            id=\"phone\"\n            defaultValue={`+380${formData.phone}`}\n            // value={formData.phone}\n            placeholder={'phone'}\n            required\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={s.label} htmlFor=\"email\">\n          <span className={s.span}>Email</span>\n          <input\n            className={s.input}\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            value={formData.email}\n            placeholder={'email'}\n            required\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={s.label} htmlFor=\"password\">\n          <span className={s.span}>Password</span>\n          <input\n            className={s.input}\n            name=\"password\"\n            type=\"text\"\n            id=\"password\"\n            value={formData.password}\n            placeholder={'password'}\n            required\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={s.label} htmlFor=\"parentId\">\n          <span className={s.span}>Referer</span>\n          <input\n            className={s.input}\n            name=\"parentId\"\n            type=\"text\"\n            id=\"parentId\"\n            value={formData.parentId}\n            placeholder={'parentId'}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          SignUp\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["dispatch","useDispatch","initialFormData","name","phone","email","password","parentId","useState","formData","setFormData","handleChangeInput","ev","target","value","className","s","onSubmit","preventDefault","newUser","Number","userRegisterThunk","htmlFor","type","id","placeholder","required","onChange","defaultValue"],"sourceRoot":""}