{"version":3,"file":"static/js/915.68d08af8.chunk.js","mappings":"qQACA,GAAgB,YAAc,sCAAsC,kBAAoB,4CAA4C,MAAQ,iC,SCuF5I,EAlFyB,WACvB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,EAAqB,CACzBC,KAAM,WACNC,OAAQ,KACRC,MAAO,GACPC,OAAQ,IAEV,GAAsCC,EAAAA,EAAAA,UAASL,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KAEA,SAASC,EAA6BC,GACpC,MAAwBA,EAAGC,OAAnBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,GAAe,kBAAKD,GAAN,cAAoBK,EAAOC,IAC1C,CAyBD,OACE,kBAAMC,UAAWC,EAAAA,YAAeC,SAzBlC,SAAkCN,GAChCA,EAAGO,iBACH,IAAMC,EAAW,CACfhB,KAAMK,EAAYL,KAClBC,OAAQgB,OAAOZ,EAAYJ,QAC3BC,MAAOG,EAAYH,MACnBC,OAAQc,OAAOZ,EAAYF,SAE7Be,QAAQC,IAAIH,GACZnB,GAASuB,EAAAA,EAAAA,IAAsBJ,IAC/BV,EAAeP,EAChB,EAcC,WACE,iBAAKa,UAAWC,EAAAA,kBAAhB,WACE,kBACED,UAAWC,EAAAA,MACXb,KAAK,OACLU,KAAK,OACLW,YAAY,aACZC,aAAcjB,EAAYL,KAC1BuB,SAAUhB,EACViB,UAAQ,KAEV,kBACEZ,UAAWC,EAAAA,MACXb,KAAK,SACLU,KAAK,SACLW,YAAY,eACZC,aAAcjB,EAAYJ,OAC1BsB,SAAUhB,EACViB,UAAQ,KAEV,kBACEZ,UAAWC,EAAAA,MACXb,KAAK,SACLU,KAAK,SACLW,YAAY,SACZC,aAAcjB,EAAYF,OAC1BoB,SAAUhB,EACViB,UAAQ,KAEV,kBACEZ,UAAWC,EAAAA,MACXb,KAAK,OACLU,KAAK,QACLW,YAAY,cACZC,aAAcjB,EAAYH,MAC1BqB,SAAUhB,QAGd,mBAAQK,UAAWC,EAAAA,OAAnB,oCAGL,ECzED,EAR2B,WACzB,OACE,0BACE,SAAC,EAAD,KAGL,E,UCVD,GAAgB,UAAY,6BAA6B,MAAQ,0BCqCjE,EA1BkB,WAChB,IAAMhB,GAAWC,EAAAA,EAAAA,MACT2B,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAA1BF,UAMR,OAJAG,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACThC,GAASiC,EAAAA,EAAAA,MACV,GAAE,CAACjC,KAEF,iCACE,gBAAKe,UAAWC,EAAAA,SAAhB,UACE,SAACkB,EAAA,EAAD,CACEC,MAAM,oGACNC,SAAU,iTACVC,OAAQA,EAAAA,EACRC,YAAY,gBACZvB,UAAWC,EAAAA,MALb,UAOE,SAAC,EAAD,SAGJ,SAACuB,EAAA,EAAD,CAAWX,UAAWA,MAG3B,C","sources":["webpack://referral-app/./src/components/CreateBonusesBlock/AccrulalBonus/AccrulaBonusForm.module.scss?3383","components/CreateBonusesBlock/AccrulalBonus/AccrulaBonusForm.jsx","components/CreateBonusesBlock/CreateBonusesBlock.jsx","webpack://referral-app/./src/components/Pages/AdminPage/AdminPage.module.scss?9756","components/Pages/AdminPage/AdminPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"accrualForm\":\"AccrulaBonusForm_accrualForm__v1LsR\",\"accrualFormInputs\":\"AccrulaBonusForm_accrualFormInputs__+fLWc\",\"input\":\"AccrulaBonusForm_input__tIbc8\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { postBonusAccrualThunk } from 'redux/transactions/transactionsThunks';\n\nimport s from './AccrulaBonusForm.module.scss';\n\nconst AccrulaBonusForm = () => {\n  const dispatch = useDispatch();\n  const accrulaInitialSate = {\n    type: 'personal',\n    amount: null,\n    notes: '',\n    toUser: 33,\n  };\n  const [accrualData, setAccrualData] = useState(accrulaInitialSate);\n\n  function handleAcrrualFormInputChange(ev) {\n    const { name, value } = ev.target;\n    setAccrualData({ ...accrualData, [name]: value });\n  }\n  function handleAccrulalFormSubmit(ev) {\n    ev.preventDefault();\n    const postData = {\n      type: accrualData.type,\n      amount: Number(accrualData.amount),\n      notes: accrualData.notes,\n      toUser: Number(accrualData.toUser),\n    };\n    console.log(postData);\n    dispatch(postBonusAccrualThunk(postData));\n    setAccrualData(accrulaInitialSate);\n  }\n  // ISumUserBlockedBonuses={\n  //   total*\tnumber\n  //   example: 600\n  //   personal*\tnumber\n  //   example: 100\n  //   referral*\tnumber\n  //   example: 50\n  //   extra*\tnumber\n  //   example: 250\n  //   cashback*\tnumber\n  //   example: 200\n  //   }\n  return (\n    <form className={s.accrualForm} onSubmit={handleAccrulalFormSubmit}>\n      <div className={s.accrualFormInputs}>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"type\"\n          placeholder=\"bonus type\"\n          defaultValue={accrualData.type}\n          onChange={handleAcrrualFormInputChange}\n          required\n        />\n        <input\n          className={s.input}\n          type=\"number\"\n          name=\"amount\"\n          placeholder=\"bonus amount\"\n          defaultValue={accrualData.amount}\n          onChange={handleAcrrualFormInputChange}\n          required\n        />\n        <input\n          className={s.input}\n          type=\"number\"\n          name=\"toUser\"\n          placeholder=\"toUser\"\n          defaultValue={accrualData.toUser}\n          onChange={handleAcrrualFormInputChange}\n          required\n        />\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"notes\"\n          placeholder=\"bonus notes\"\n          defaultValue={accrualData.notes}\n          onChange={handleAcrrualFormInputChange}\n        />\n      </div>\n      <button className={s.button}>Create accrual bonus</button>\n    </form>\n  );\n};\n\nexport default AccrulaBonusForm;\n","import React from 'react';\n\nimport AccrulaBonusForm from './AccrulalBonus/AccrulaBonusForm';\n\n// import s from './CreateBonusesBlock.module.scss';\nconst CreateBonusesBlock = () => {\n  return (\n    <div>\n      <AccrulaBonusForm />\n    </div>\n  );\n};\n\nexport default CreateBonusesBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"AdminPage\":\"AdminPage_AdminPage__jjZHr\",\"block\":\"AdminPage_block__8SlFP\"};","import React, { useEffect } from 'react';\nimport Block from 'components/Block/Block';\nimport AppLoader from 'components/AppLoader/AppLoader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCountChildrenThunk } from 'redux/referrals/referralsThunks';\nimport { getAllTransactionsThunk } from 'redux/transactions/transactionsThunks';\nimport { selectChildrensInfo } from 'redux/selectors';\n\nimport CreateBonusesBlock from 'components/CreateBonusesBlock/CreateBonusesBlock';\nimport sprite from 'img/sprite';\nimport s from './AdminPage.module.scss';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(selectChildrensInfo);\n\n  useEffect(() => {\n    dispatch(getCountChildrenThunk());\n    dispatch(getAllTransactionsThunk());\n  }, [dispatch]);\n  return (\n    <>\n      <div className={s.MainPage}>\n        <Block\n          title=\"Створення бонусів\"\n          subTitle={'Тут адмін може створити бонуси для будь-якого користувача'}\n          sprite={sprite}\n          iconStartId='icon-settings'\n          className={s.block}\n        >\n          <CreateBonusesBlock />\n        </Block>\n      </div>\n      <AppLoader isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default AdminPage;\n"],"names":["dispatch","useDispatch","accrulaInitialSate","type","amount","notes","toUser","useState","accrualData","setAccrualData","handleAcrrualFormInputChange","ev","target","name","value","className","s","onSubmit","preventDefault","postData","Number","console","log","postBonusAccrualThunk","placeholder","defaultValue","onChange","required","isLoading","useSelector","selectChildrensInfo","useEffect","getCountChildrenThunk","getAllTransactionsThunk","Block","title","subTitle","sprite","iconStartId","AppLoader"],"sourceRoot":""}