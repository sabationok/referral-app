{"version":3,"file":"static/js/319.c6aea6bd.chunk.js","mappings":"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","sources":["webpack://referral-app/./src/components/AppPages/SignUpPage/SignUpPage.module.scss?7248","components/AppPages/SignUpPage/SignUpPage.jsx","webpack://referral-app/./src/components/ButtonText/ButtonText.module.scss?da3e","components/ButtonText/ButtonText.jsx","components/ModalCustom/ModalOpenLink/ModalOpenLink.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SignUpPage\":\"SignUpPage_SignUpPage__P2VgV\",\"form\":\"SignUpPage_form__xKGTh\",\"label\":\"SignUpPage_label__Iq1Ka\",\"span\":\"SignUpPage_span__29bZp\",\"inputs\":\"SignUpPage_inputs__bZxW3\",\"input\":\"SignUpPage_input__PUskG\",\"agreament\":\"SignUpPage_agreament__KxBFV\",\"noProfile\":\"SignUpPage_noProfile__wyyXZ\",\"link\":\"SignUpPage_link__0ZM5t\"};","import React, { useState } from 'react';\nimport Block from 'components/Block/Block';\nimport ButtonText from 'components/ButtonText/ButtonText';\nimport PrivacyPolicyBlock from 'components/PrivacyPolicyBlock/PrivacyPolicyBlock';\nimport RullesBlock from 'components/RullesBlock/RullesBlock';\nimport ModalOpenLink from 'components/ModalCustom/ModalOpenLink/ModalOpenLink';\nimport AppLoader from 'components/AppLoader/AppLoader';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userRegisterThunk } from 'redux/auth/authThunks';\nimport { selectUserData } from 'redux/selectors';\nimport { useParams, Link } from 'react-router-dom';\n\nimport sprite from 'img/sprite';\nimport s from './SignUpPage.module.scss';\nconst SignUpPage = () => {\n  const { isLoading } = useSelector(selectUserData);\n  const dispatch = useDispatch();\n  const { referrerId } = useParams();\n\n  const initialFormData = {\n    name: '',\n    phone: '',\n    email: '',\n    password: '',\n    repeatPassword: '',\n    parentId: referrerId || '',\n  };\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChangeInput(ev) {\n    let { name, value } = ev.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(ev) {\n    ev.preventDefault();\n    if (formData.repeatPassword !== formData.password) {\n      Notiflix.Notify.failure('Паролі не збігаються');\n      return;\n    }\n    const newUser = {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email,\n      password: formData.password,\n      parentId: Number(referrerId) || Number(formData.parentId),\n    };\n    dispatch(userRegisterThunk(newUser));\n    setFormData(initialFormData);\n  }\n\n  return (\n    <>\n      <div className={s.SignUpPage}>\n        <Block\n          title=\"Реєстрація\"\n          subTitle={\n            referrerId\n              ? `Реєстрація нового користувача (Запрошення від користувача ID:${referrerId})`\n              : `Реєстрація нового користувача`\n          }\n          sprite={sprite}\n          iconStartId=\"icon-signUp\"\n        >\n          <form className={s.form} onSubmit={handleFormSubmit}>\n            <label className={s.label} htmlFor=\"name\">\n              <span className={s.span}>І'мя</span>\n              <input\n                className={s.input}\n                name=\"name\"\n                type=\"text\"\n                id=\"name\"\n                value={formData.name}\n                placeholder={'name'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"phone\">\n              <span className={s.span}>Телефон</span>\n              <input\n                className={s.input}\n                name=\"phone\"\n                type=\"text\"\n                id=\"phone\"\n                value={formData.phone}\n                placeholder={'+380'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"email\">\n              <span className={s.span}>Електронна адреса</span>\n              <input\n                className={s.input}\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formData.email}\n                placeholder={'example@mail.com'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"password\">\n              <span className={s.span}>Пароль</span>\n              <input\n                className={s.input}\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formData.password}\n                placeholder={'password'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"repeatPassword\">\n              <span className={s.span}>Повторіть пароль</span>\n              <input\n                className={s.input}\n                name=\"repeatPassword\"\n                type=\"password\"\n                id=\"repeatPassword\"\n                value={formData.repeatPassword}\n                placeholder={'repeat password'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"parentId\">\n              <span className={s.span}>{'Хто запросив? (ID)'}</span>\n              <input\n                className={s.input}\n                name=\"parentId\"\n                type=\"text\"\n                id=\"parentId\"\n                value={formData.parentId}\n                placeholder={'parentId'}\n                disabled={referrerId}\n                onChange={handleChangeInput}\n                required\n              />\n            </label>\n            <p className={s.agreament}>\n              <span>\n                Настискаю кнопку реєстрації, Ви погоджуєтесь із нашою{' '}\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<PrivacyPolicyBlock />}\n                >\n                  Політикою конфіденційності\n                </ModalOpenLink>{' '}\n                та{' '}\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<RullesBlock />}\n                >\n                  Правилами сервісу\n                </ModalOpenLink>\n              </span>\n            </p>\n            <ButtonText type=\"submit\">SignUp</ButtonText>\n            <p className={s.noProfile}>\n              <span>У Вас уже є профіль? Тоді скористуйтесь</span>\n              <br />\n              <Link to=\"/signIn\" className={s.link}>\n                \"Формою авторизації\"\n              </Link>\n            </p>\n          </form>\n        </Block>\n      </div>\n      <AppLoader isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default SignUpPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ButtonText_Button__jyVlZ\"};","import React from 'react';\n\nimport s from './ButtonText.module.scss';\n\nconst ButtonText = ({\n  children,\n  type = 'button',\n  disabled = false,\n  onClick = null,\n}) => {\n  function handleBtnClick() {\n    if (onClick) {\n      onClick();\n      return;\n    }\n    return;\n  }\n  return (\n    <button\n      type={type}\n      className={s.Button}\n      disabled={disabled}\n      onClick={handleBtnClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default ButtonText;\n","import React, { useState } from 'react';\nimport ModalCustom from '../ModalCustom';\n\nconst ModalOpenLink = ({\n  children,\n  className,\n  modalContent,\n  defaultBtn = true,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  function toggleModalByLink(ev) {\n    ev.preventDefault();\n    setIsModalOpen(!isModalOpen);\n  }\n  function toggleModal(ev) {\n    setIsModalOpen(!isModalOpen);\n  }\n  return (\n    <>\n      <a className={className} onClick={toggleModalByLink} href=\"/\">\n        {children}\n      </a>\n      {isModalOpen && (\n        <ModalCustom handleToggle={toggleModal} defaultBtn={defaultBtn}>\n          {modalContent}\n        </ModalCustom>\n      )}\n    </>\n  );\n};\n\nexport default ModalOpenLink;\n"],"names":["isLoading","useSelector","selectUserData","dispatch","useDispatch","referrerId","useParams","initialFormData","name","phone","email","password","repeatPassword","parentId","useState","formData","setFormData","handleChangeInput","ev","target","value","className","s","Block","title","subTitle","sprite","iconStartId","onSubmit","preventDefault","newUser","Number","userRegisterThunk","Notiflix","htmlFor","type","id","placeholder","required","onChange","disabled","ModalOpenLink","modalContent","PrivacyPolicyBlock","RullesBlock","ButtonText","to","AppLoader","children","onClick","defaultBtn","isModalOpen","setIsModalOpen","href","handleToggle"],"sourceRoot":""}