{"version":3,"file":"static/js/921.2fe7f5a8.chunk.js","mappings":"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","sources":["webpack://referral-app/./src/components/CreateBonusesBlock/AccrulalBonusForm/AccrulaBonusForm.module.scss?60a5","components/CreateBonusesBlock/AccrulalBonusForm/AccrulaBonusForm.jsx","components/CreateBonusesBlock/CreateBonusesBlock.module.scss","components/CreateBonusesBlock/CreateBonusesBlock.jsx","webpack://referral-app/./src/components/AppPages/AdminPage/AdminPage.module.scss?4983","components/AppPages/AdminPage/AdminPage.jsx","webpack://referral-app/./src/components/ButtonLink/ButtonLink.module.scss?09c4","components/ButtonLink/ButtonLink.jsx","webpack://referral-app/./src/components/ButtonText/ButtonText.module.scss?da3e","components/ButtonText/ButtonText.jsx","webpack://referral-app/./src/components/InputCustom/InputCustom.module.scss?9338","components/InputCustom/InputCustom.jsx","webpack://referral-app/./src/components/SignUpBlock/SignUpBlock.module.scss?0a6f","components/SignUpBlock/SignUpBlock.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AccrulaBonusForm_form__CyJRx\",\"label\":\"AccrulaBonusForm_label__uQu5N\",\"span\":\"AccrulaBonusForm_span__mt4Sf\",\"inputs\":\"AccrulaBonusForm_inputs__zc6QA\",\"input\":\"AccrulaBonusForm_input__8JHvu\",\"agreament\":\"AccrulaBonusForm_agreament__qlqk1\",\"link\":\"AccrulaBonusForm_link__ezDlJ\"};","import React, { useState } from 'react';\nimport ButtonText from 'components/ButtonText/ButtonText';\nimport InputCustom from 'components/InputCustom/InputCustom';\nimport { useDispatch } from 'react-redux';\nimport { postBonusAccrualThunk } from 'redux/transactions/transactionsThunks';\n\nimport s from './AccrulaBonusForm.module.scss';\n\nconst AccrulaBonusForm = () => {\n  const dispatch = useDispatch();\n  const accrulaInitialSate = {\n    type: 'personal',\n    amount: null,\n    notes: '',\n    toUser: '27',\n  };\n  const [accrualData, setAccrualData] = useState(accrulaInitialSate);\n\n  function handleChangeInput(ev) {\n    const { name, value } = ev.target;\n    setAccrualData({ ...accrualData, [name]: value });\n  }\n  function handleAccrulalFormSubmit(ev) {\n    ev.preventDefault();\n    const postData = {\n      type: accrualData.type,\n      amount: Number(accrualData.amount),\n      notes: accrualData.notes,\n      toUser: Number(accrualData.toUser),\n    };\n    console.log(postData);\n    dispatch(postBonusAccrualThunk(postData));\n    setAccrualData(accrulaInitialSate);\n  }\n  // ISumUserBlockedBonuses={\n  //   total*\tnumber\n  //   example: 600\n  //   personal*\tnumber\n  //   example: 100\n  //   referral*\tnumber\n  //   example: 50\n  //   extra*\tnumber\n  //   example: 250\n  //   cashback*\tnumber\n  //   example: 200\n  //   }\n  return (\n    <form className={s.form} onSubmit={handleAccrulalFormSubmit}>\n      <div className={s.inputs}>\n        <InputCustom\n          labelClass={s.label}\n          spanClass={s.span}\n          inputClass={s.input}\n          labelValue=\"Тип бонусів\"\n          InputValue={accrualData.type}\n          name=\"type\"\n          id=\"type\"\n          type=\"text\"\n          placeholder=\"Тип бонусів\"\n          title={\"Тип бонусів: 'personal, cashback, referral, extra'\"}\n          required\n          onChange={handleChangeInput}\n        />\n        <InputCustom\n          labelClass={s.label}\n          spanClass={s.span}\n          inputClass={s.input}\n          labelValue=\"Кількість бонусів\"\n          InputValue={accrualData.amount}\n          name=\"amount\"\n          id=\"amount\"\n          type=\"number\"\n          placeholder=\"Кількість бонусів\"\n          min={0}\n          // pattern='[0-9]'\n          required\n          onChange={handleChangeInput}\n        />\n\n        <InputCustom\n          labelClass={s.label}\n          spanClass={s.span}\n          inputClass={s.input}\n          labelValue=\"ID користувача\"\n          InputValue={accrualData.toUser}\n          name=\"toUser\"\n          id=\"toUser\"\n          type=\"text\"\n          placeholder=\"ID користувача\"\n          required\n          onChange={handleChangeInput}\n        />\n        <InputCustom\n          labelClass={s.label}\n          spanClass={s.span}\n          inputClass={s.input}\n          labelValue=\"Коментар\"\n          InputValue={accrualData.notes}\n          name=\"notes\"\n          id=\"notes\"\n          type=\"text\"\n          placeholder=\"Коментар\"\n          required\n          onChange={handleChangeInput}\n        />\n        <ButtonText type=\"submit\">Create accrual bonus</ButtonText>\n      </div>\n    </form>\n  );\n};\n\nexport default AccrulaBonusForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport Block from 'components/Block/Block';\nimport AccrulaBonusForm from './AccrulalBonusForm/AccrulaBonusForm';\n\nimport s from './CreateBonusesBlock.module.scss';\nconst CreateBonusesBlock = () => {\n  return (\n    <Block\n      title=\"Створення бонусів\"\n      subTitle={'Тут адмін може створити бонуси для будь-якого користувача'}\n      iconStartId=\"icon-settings\"\n      className={s.block}\n    >\n      <AccrulaBonusForm />\n    </Block>\n  );\n};\n\nexport default CreateBonusesBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"AdminPage\":\"AdminPage_AdminPage__N0NWK\"};","import React from 'react';\n\nimport CreateBonusesBlock from 'components/CreateBonusesBlock/CreateBonusesBlock';\nimport SignUpBlock from 'components/SignUpBlock/SignUpBlock';\n\nimport s from './AdminPage.module.scss';\n\nconst AdminPage = () => {\n  return (\n    <>\n      <div className={s.AdminPage}>\n        <CreateBonusesBlock />\n        <SignUpBlock signInBtn={false} policy={false} />\n      </div>\n    </>\n  );\n};\n\nexport default AdminPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ButtonLink_Button__FBNSi\",\"disabled\":\"ButtonLink_disabled__gA9-c\",\"ColoredBtn\":\"ButtonLink_ColoredBtn__XA1rh\",\"PrimaryBtn\":\"ButtonLink_PrimaryBtn__6KZRE\",\"BorderBtn\":\"ButtonLink_BorderBtn__xArm8\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport s from './ButtonLink.module.scss';\nconst ButtonLink = ({\n  children,\n  to = '/',\n  style = {},\n  className = '',\n  onClick,\n  styleType = 'PrimaryBtn',\n}) => {\n  const classNames = [s.Button, s[styleType], className].join(' ');\n  return (\n    <Link to={to} onClick={onClick} style={style} className={classNames}>\n      <span>{children}</span>\n    </Link>\n  );\n};\n\nexport default ButtonLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ButtonText_Button__jyVlZ\",\"disabled\":\"ButtonText_disabled__uCPQr\",\"ColoredBtn\":\"ButtonText_ColoredBtn__X+88K\",\"PrimaryBtn\":\"ButtonText_PrimaryBtn__KnE6B\",\"BorderBtn\":\"ButtonText_BorderBtn__yLIBf\"};","import React from 'react';\n\nimport s from './ButtonText.module.scss';\n\nconst ButtonText = ({\n  children,\n  type = 'button',\n  disabled = false,\n  style = {},\n  className = '',\n  onClick = null,\n  styleType = 'PrimaryBtn',\n}) => {\n  const classNames = [s.Button, s[styleType], className].join(' ');\n  function handleBtnClick() {\n    if (onClick) {\n      onClick();\n      return;\n    }\n    return;\n  }\n  return (\n    <button\n      style={style}\n      type={type}\n      className={classNames}\n      disabled={disabled}\n      onClick={handleBtnClick}\n    >\n      <span>{children}</span>\n    </button>\n  );\n};\n\nexport default ButtonText;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputBox\":\"InputCustom_inputBox__AJxyA\",\"visibilityBtn\":\"InputCustom_visibilityBtn__mqaQU\"};","import React, { useEffect, useState } from 'react';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\n\nimport s from './InputCustom.module.scss';\nconst InputCustom = ({\n  labelClass = '',\n  spanClass = '',\n  inputClass = '',\n  name = '',\n  id = '',\n  inputValue,\n  labelValue = '',\n  placeholder = '',\n  type = 'text',\n  required = true,\n  onChange,\n  ...others\n}) => {\n  const [isVisible, setIsVisible] = useState();\n  const [inputType, setInputType] = useState(type);\n  const iconId = isVisible ? 'icon-visibilityOn' : 'icon-visibilityOff';\n  const visibilityBtn = type === 'password';\n  function handleToggleVisibility() {\n    setIsVisible(!isVisible);\n  }\n  useEffect(() => {\n    if (type !== 'password') {\n      return;\n    }\n    if (type === 'password' && isVisible) {\n      setInputType('text');\n      return;\n    }\n    setInputType(type);\n  }, [isVisible, type]);\n  return (\n    <label className={labelClass} htmlFor={id}>\n      <span className={spanClass}>{labelValue}</span>\n      <span className={s.inputBox}>\n        <input\n          className={inputClass}\n          name={name}\n          type={inputType}\n          id={id}\n          value={inputValue && inputValue}\n          placeholder={placeholder}\n          required={required}\n          onChange={onChange}\n          {...others}\n        />\n        {visibilityBtn && (\n          <button\n            type=\"button\"\n            className={s.visibilityBtn}\n            onClick={handleToggleVisibility}\n          >\n            <SvgIcon iconId={iconId} />\n          </button>\n        )}\n      </span>\n    </label>\n  );\n};\n\nexport default InputCustom;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUpBlock_form__6cJ45\",\"label\":\"SignUpBlock_label__OleYp\",\"span\":\"SignUpBlock_span__Ktnuk\",\"inputs\":\"SignUpBlock_inputs__AZ9gS\",\"input\":\"SignUpBlock_input__gXnot\",\"agreament\":\"SignUpBlock_agreament__NJF7Z\",\"link\":\"SignUpBlock_link__HJ+Fw\"};","import React, { useState } from 'react';\nimport Block from 'components/Block/Block';\nimport ButtonText from 'components/ButtonText/ButtonText';\nimport PrivacyPolicyBlock from 'components/PrivacyPolicyBlock/PrivacyPolicyBlock';\nimport RullesBlock from 'components/RullesBlock/RullesBlock';\nimport ModalOpenLink from 'components/ModalCustom/ModalOpenLink/ModalOpenLink';\nimport ButtonLink from 'components/ButtonLink/ButtonLink';\nimport InputCustom from 'components/InputCustom/InputCustom';\n\nimport { useDispatch } from 'react-redux';\nimport { userRegisterThunk } from 'redux/auth/authThunks';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport sprite from 'img/sprite';\nimport s from './SignUpBlock.module.scss';\nconst SignUpBlock = ({ signInBtn, agreament }) => {\n  const dispatch = useDispatch();\n  const { referrerId } = useParams();\n  const initialFormData = {\n    name: 'Петро М',\n    phone: '+380674567892',\n    email: 'mail@mail.com',\n    password: '',\n    repeatPassword: '',\n    parentId: referrerId || '',\n  };\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChangeInput(ev) {\n    let { name, value } = ev.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(ev) {\n    ev.preventDefault();\n    const newUser = {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email,\n      password: formData.password,\n      parentId: Number(referrerId) || Number(formData.parentId),\n    };\n    if (formData.repeatPassword !== formData.password) {\n      console.table(formData)\n      console.table(initialFormData)\n      toast.error('Паролі не співпадають');\n      return;\n    }\n    dispatch(userRegisterThunk(newUser));\n    setFormData(initialFormData);\n  }\n\n  return (\n    <>\n      <Block\n        title=\"Реєстрація\"\n        subTitle={\n          referrerId\n            ? `Реєстрація нового користувача (Запрошення від користувача ID:${referrerId})`\n            : `Реєстрація нового користувача`\n        }\n        sprite={sprite}\n        iconStartId=\"icon-signUp\"\n      >\n        <form className={s.form} onSubmit={handleFormSubmit}>\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"І'мя\"\n            inputValue={formData.name}\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n            placeholder=\"І'мя\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Телефон\"\n            inputValue={formData.phone}\n            name=\"phone\"\n            id=\"phone\"\n            type=\"text\"\n            placeholder=\"+3801234567\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Електронна адреса\"\n            inputValue={formData.email}\n            name=\"email\"\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"example@mail.com\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Пароль\"\n            inputValue={formData.password}\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Повторіть пароль\"\n            inputValue={formData.repeatPassword}\n            name=\"repeatPassword\"\n            id=\"repeatPassword\"\n            type=\"password\"\n            placeholder=\"Repeat password\"\n            required\n            onChange={handleChangeInput}\n          />\n          <InputCustom\n            labelClass={s.label}\n            spanClass={s.span}\n            inputClass={s.input}\n            labelValue=\"Хто запросив? (ID)\"\n            inputValue={formData.parentId}\n            name=\"parentId\"\n            id=\"parentId\"\n            type=\"text\"\n            placeholder=\"ID: \"\n            disabled={referrerId}\n            required\n            onChange={handleChangeInput}\n          />\n          {agreament && (\n            <p className={s.agreament}>\n              <span>\n                Настискаючи кнопку реєстрації, Ви погоджуєтесь із нашою <br />\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<PrivacyPolicyBlock />}\n                >\n                  Політикою конфіденційності\n                </ModalOpenLink>{' '}\n                та{' '}\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<RullesBlock />}\n                >\n                  Правилами сервісу\n                </ModalOpenLink>\n              </span>\n            </p>\n          )}\n          <ButtonText type=\"submit\" styleType=\"ColoredBtn\">\n            Реєстрація\n          </ButtonText>\n          {signInBtn && <ButtonLink to=\"/signIn\">Вхід</ButtonLink>}\n        </form>\n      </Block>\n    </>\n  );\n};\n\nexport default SignUpBlock;\n"],"names":["dispatch","useDispatch","accrulaInitialSate","type","amount","notes","toUser","useState","accrualData","setAccrualData","handleChangeInput","ev","target","name","value","className","s","onSubmit","preventDefault","postData","Number","console","log","postBonusAccrualThunk","InputCustom","labelClass","spanClass","inputClass","labelValue","InputValue","id","placeholder","title","required","onChange","min","ButtonText","Block","subTitle","iconStartId","SignUpBlock","signInBtn","policy","children","to","style","onClick","styleType","classNames","join","disabled","inputValue","others","isVisible","setIsVisible","inputType","setInputType","iconId","visibilityBtn","useEffect","htmlFor","SvgIcon","agreament","referrerId","useParams","initialFormData","phone","email","password","repeatPassword","parentId","formData","setFormData","sprite","newUser","table","toast","userRegisterThunk","pattern","ModalOpenLink","modalContent","PrivacyPolicyBlock","RullesBlock","ButtonLink"],"sourceRoot":""}