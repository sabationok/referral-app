{"version":3,"file":"static/js/113.cad3cf89.chunk.js","mappings":"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","sources":["components/ModalCustom/ModalOpenLink/ModalOpenLink.jsx","webpack://referral-app/./src/components/AppPages/SignUpPage/SignUpPage.module.scss?7248","components/AppPages/SignUpPage/SignUpPage.jsx","webpack://referral-app/./src/components/ButtonText/ButtonText.module.scss?da3e","components/ButtonText/ButtonText.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ModalCustom from '../ModalCustom';\n\nconst ModalOpenLink = ({ children, className, modalContent }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  function toggleModalByLink(ev) {\n    ev.preventDefault();\n    setIsModalOpen(!isModalOpen);\n  }\n  function toggleModal(ev) {\n    setIsModalOpen(!isModalOpen);\n  }\n  return (\n    <>\n      <a className={className} onClick={toggleModalByLink} href=\"/\">\n        {children}\n      </a>\n      {isModalOpen && (\n        <ModalCustom handleToggle={toggleModal} defaultBtn={true}>\n          {modalContent}\n        </ModalCustom>\n      )}\n    </>\n  );\n};\n\nexport default ModalOpenLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"SignUpPage\":\"SignUpPage_SignUpPage__P2VgV\",\"form\":\"SignUpPage_form__xKGTh\",\"label\":\"SignUpPage_label__Iq1Ka\",\"span\":\"SignUpPage_span__29bZp\",\"inputs\":\"SignUpPage_inputs__bZxW3\",\"input\":\"SignUpPage_input__PUskG\",\"agreament\":\"SignUpPage_agreament__KxBFV\",\"noProfile\":\"SignUpPage_noProfile__wyyXZ\",\"link\":\"SignUpPage_link__0ZM5t\"};","import React, { useState } from 'react';\nimport Block from 'components/Block/Block';\nimport ButtonText from 'components/ButtonText/ButtonText';\nimport PrivacyPolicyBlock from 'components/PrivacyPolicyBlock/PrivacyPolicyBlock';\nimport RullesBlock from 'components/RullesBlock/RullesBlock';\nimport ModalOpenLink from 'components/ModalCustom/ModalOpenLink/ModalOpenLink';\nimport AppLoader from 'components/AppLoader/AppLoader';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userRegisterThunk } from 'redux/auth/authThunks';\nimport { selectUserData } from 'redux/selectors';\nimport { useParams, Link } from 'react-router-dom';\n\nimport sprite from 'img/sprite';\nimport s from './SignUpPage.module.scss';\nconst SignUpPage = () => {\n  const { isLoading } = useSelector(selectUserData);\n  const dispatch = useDispatch();\n  const { referrerId } = useParams();\n\n  const initialFormData = {\n    name: '',\n    phone: '',\n    email: '',\n    password: '',\n    repeatPassword: '',\n    parentId: referrerId || '',\n  };\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChangeInput(ev) {\n    let { name, value } = ev.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(ev) {\n    ev.preventDefault();\n    if (formData.repeatPassword !== formData.password) {\n      Notiflix.Notify.failure('Паролі не збігаються');\n      return;\n    }\n    const newUser = {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email,\n      password: formData.password,\n      parentId: Number(referrerId) || Number(formData.parentId),\n    };\n    dispatch(userRegisterThunk(newUser));\n    setFormData(initialFormData);\n  }\n\n  return (\n    <>\n      <div className={s.SignUpPage}>\n        <Block\n          title=\"Реєстрація\"\n          subTitle={\n            referrerId\n              ? `Реєстрація нового користувача (Запрошення від користувача ID:${referrerId})`\n              : `Реєстрація нового користувача`\n          }\n          sprite={sprite}\n          iconStartId=\"icon-signUp\"\n        >\n          <form className={s.form} onSubmit={handleFormSubmit}>\n            <label className={s.label} htmlFor=\"name\">\n              <span className={s.span}>І'мя</span>\n              <input\n                className={s.input}\n                name=\"name\"\n                type=\"text\"\n                id=\"name\"\n                value={formData.name}\n                placeholder={'name'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"phone\">\n              <span className={s.span}>Телефон</span>\n              <input\n                className={s.input}\n                name=\"phone\"\n                type=\"text\"\n                id=\"phone\"\n                value={formData.phone}\n                placeholder={'+380'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"email\">\n              <span className={s.span}>Електронна адреса</span>\n              <input\n                className={s.input}\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formData.email}\n                placeholder={'example@mail.com'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"password\">\n              <span className={s.span}>Пароль</span>\n              <input\n                className={s.input}\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formData.password}\n                placeholder={'password'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"repeatPassword\">\n              <span className={s.span}>Повторіть пароль</span>\n              <input\n                className={s.input}\n                name=\"repeatPassword\"\n                type=\"password\"\n                id=\"repeatPassword\"\n                value={formData.repeatPassword}\n                placeholder={'repeat password'}\n                required\n                onChange={handleChangeInput}\n              />\n            </label>\n            <label className={s.label} htmlFor=\"parentId\">\n              <span className={s.span}>{'Хто запросив? (ID)'}</span>\n              <input\n                className={s.input}\n                name=\"parentId\"\n                type=\"text\"\n                id=\"parentId\"\n                value={formData.parentId}\n                placeholder={'parentId'}\n                disabled={referrerId}\n                onChange={handleChangeInput}\n                required\n              />\n            </label>\n            <p className={s.agreament}>\n              <span>\n                Настискаю кнопку реєстрації, Ви погоджуєтесь із нашою{' '}\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<PrivacyPolicyBlock />}\n                >\n                  Політикою конфіденційності\n                </ModalOpenLink>{' '}\n                та{' '}\n                <ModalOpenLink\n                  className={s.link}\n                  modalContent={<RullesBlock />}\n                >\n                  Правилами сервісу\n                </ModalOpenLink>\n              </span>\n            </p>\n            <ButtonText type=\"submit\">SignUp</ButtonText>\n            <p className={s.noProfile}>\n              <span>У Вас уже є профіль? Тоді скористуйтесь</span>\n              <br />\n              <Link to=\"/signIn\" className={s.link}>\n                \"Формою авторизації\"\n              </Link>\n            </p>\n          </form>\n        </Block>\n      </div>\n      <AppLoader isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default SignUpPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ButtonText_Button__jyVlZ\"};","import React from 'react';\n\nimport s from './ButtonText.module.scss';\n\nconst ButtonText = ({ children, type = 'button', disabled = false }) => {\n  return (\n    <button type={type} className={s.Button} disabled={disabled}>\n      {children}\n    </button>\n  );\n};\n\nexport default ButtonText;\n"],"names":["children","className","modalContent","useState","isModalOpen","setIsModalOpen","onClick","ev","preventDefault","href","ModalCustom","handleToggle","defaultBtn","isLoading","useSelector","selectUserData","dispatch","useDispatch","referrerId","useParams","initialFormData","name","phone","email","password","repeatPassword","parentId","formData","setFormData","handleChangeInput","target","value","s","Block","title","subTitle","sprite","iconStartId","onSubmit","newUser","Number","userRegisterThunk","Notiflix","htmlFor","type","id","placeholder","required","onChange","disabled","PrivacyPolicyBlock","RullesBlock","ButtonText","to","AppLoader"],"sourceRoot":""}